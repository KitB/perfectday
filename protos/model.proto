syntax = "proto3";
import "google/protobuf/timestamp.proto";

package pd.model;

message User {
    /**
     * Generated by python's uuid.uuid4()
     */
    string uuid = 1;

    Balance balance = 2;
    repeated Regular regulars = 3;
}

message Balance {
    /**
     * The important number: how much do I have to spend?
     */
    double available_pd = 1;

    /**
     * Just a historical figure to keep because I think it might be interesting to graph
     */
    double total_pd = 2;
}

/**
 * A Regular will almost always be a Daily, that is it happens every day, but it may also be a Weekly, or every other
 * day.
 *
 * The "Regular" class defines the tasks that a user must complete every `n` days in order to earn their perfect day.
 *
 * But they may also be a vice that the user is only *allowed* to partake in every `n` days.
 */
message Regular {
    /**
     * For the purposes of things which are only aware of model.proto, the series is a unique identifier.
     * For those that need the additional detail of storage.proto, the series must be combined with a timestamp
     * to uniquely identify the object, this is as we will store past states of the task, not just the current state.
     */
    uint32 series = 1;

    /**
     * A short description of the task
     * e.g. "Brush your teeth"
     */
    string name = 2;

    /**
     * e.g. "this includes flossing!"
     */
    string note = 3;

    /**
     * Roughly the "difficulty" of the task
     * The reward for a regular is: regular.weight/sum(r.weight for r in todays_regulars)
     */
    uint32 weight = 4;
    Schedule schedule = 5;

    /**
     * Can be used to answer the question "do I need to do this one today?"
     * Specified as a list of arithmetic progressions (that is, they specify a day to start on and
     * how often it should repeat)
     *
     * For convenience you can invert a schedule in order to make it specify which days to *not* run on.
     */
    message Schedule {
        repeated Pattern pattern = 1;

        bool inverted = 2;

        message Pattern {
            /**
             * e.g. 1 for a daily, 2 for every other day, 7 for weekly
             */
            uint64 every = 1;

            /**
             * A timestamp in the day it starts (any time in that day is the same)
             */
            google.protobuf.Timestamp starts = 2;
        }
    }
}
