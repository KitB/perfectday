/**
 * This file defines disk-specific messages to avoid mixing them in with the general model
 *
 * Expected disk layout:
 * /
 * → users/
 *   → <id>/
 *     → user.pb
 *     → balances/
 *       → <seconds>_<nanos>.pb
 *     → regulars/
 *       → <id>/
 *         → <seconds>_<nanos>.pb  # id then timestamp to reduce collisions
 */
syntax = "proto3";

import "google/protobuf/timestamp.proto";

import "model.proto";

package pd.storage;

// We have "moment" types that are used to store a history of a mutable resource
// We'll keep a reference that allows us to access the latest value in vaguely
// constant time, though
//

message BalanceMoment {
    pd.model.Balance balance = 1;
    google.protobuf.Timestamp timestamp = 2;
}

message RegularMoment {
    pd.model.Regular regular = 1;
    google.protobuf.Timestamp timestamp = 2;
}

message User {
    pd.model.User user = 1;

    // We store them on disk named by their timestamp in a subdir of their user
    // so these are perfectly adequate indices.
    google.protobuf.Timestamp latest_balance = 2;
    repeated RegularMomentReference latest_regulars = 3;
}

/**
 * We can't just refer to regulars by their timestamp, so we need a type to
 * reference them with
 */
message RegularMomentReference {
    uint64 id = 1;
    google.protobuf.Timestamp timestamp = 2;
}

message Regular {
    pd.model.Regular regular = 1;
    google.protobuf.Timestamp latest_schedule = 2;
}
