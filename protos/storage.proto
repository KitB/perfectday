/**
 * This file defines disk-specific messages to avoid mixing them in with the general model
 *
 * Where we store model/history protos on disk, we will ignore their fields which reference other things we store, we
 * are only using the protos from these in order to avoid repeating the fields here. Were it not for that I would have a
 * "User" message in this file that is identical to pd.model.User except for it lacking the "balance" and "regulars"
 * fields.
 *
 * Expected disk layout:
 * /
 * → users/
 *   → <id>/
 *     → user.pb : pd.model.User
 *     → meta.pb : pd.storage.UserMeta
 *     → balance_moments/
 *       → <seconds>_<nanos>.pb : pd.history.BalanceMoment
 *     → regular_moments/
 *       → meta.pb : pd.storage.RegularMeta
 *       → <series>/
 *         → <seconds>_<nanos>.pb : pd.history.RegularMoment
 *
 * the "meta" files will generally store things like "last id generated"
 */
syntax = "proto3";

import "google/protobuf/timestamp.proto";

package pd.storage;

message UserMeta {
    google.protobuf.Timestamp latest_balance = 2;
    repeated RegularMomentReference latest_regulars = 3;

    /**
     * We can't just refer to regulars by their timestamp, so we need a type to
     * reference them with
     */
    message RegularMomentReference {
        uint64 id = 1;
        google.protobuf.Timestamp timestamp = 2;
    }
}

message RegularMeta {
    /**
     * Most recently generated
     *
     * Used to generate pd.model.Regular.series
     */
    uint32 last_series = 1;
}
